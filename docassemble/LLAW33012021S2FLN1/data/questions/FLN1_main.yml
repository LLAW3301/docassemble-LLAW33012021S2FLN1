objects from file:
  - postcodes: postcodes.json
---
objects:
  - refused_person: Individual
  - data_collection: Individual
  - submitter: Individual
  - sender: Individual
  - pawrights_logo: DAStaticFile.using(filename='paws_rights_logo_transparent.png')
---
initial: true
code: |
  # Sets the logo in the header
  set_parts(logo='<img src="' + pawrights_logo.url_for() + '" alt="Paw Rights Logo" style="height: 60px; width: 60px;">')
---
features:
  css: FLN1_main.css
  debug: False
  hide standard menu: True
---
default screen parts:
  post: |
    <div style="display: flex; height: 200px; align-items: flex-end; flex-direction: row-reverse">
    <div style="margin: 5px"><img alt="Flinders University Logo" src="https://staff.flinders.edu.au/etc.clientlibs/flinders/clientlibs/clientlib-site/resources/images/flinderuni_main_logo_black.png" height="40">
    </div>
    <div style="margin: 5px; text-align: right">
    <cite><small><i>
    Developed by Flinders University in collaboration with Amanda Muller and Ellen Fraser-Barbour
    </i></small></cite>
    </div>
    </div>
---
metadata:
  title: |
    Paws Rights
  description: |
    A way to report a food or drink venue refusal in South Australia
  authors:
    - name: Robert Piovesan, Annalese Alvarez, Accacia Verco, Chris Power, Khevalin Parekh and Matthew Donnellan
      organization: Flinders University
  revision_date: 2021-10-14
  exit url: https://www.flinders.edu.au/
---
mandatory: True
event: welcome_screen
question: "Paws Rights"
subquestion: |
  
  <b>Paw Rights</b> has been designed to make documenting assistance animal food/retail refusals fast and efficient.
  
  **Disclaimer: This application does not provide legal advice and should not be taken as such. This should not be considered a legal document.**
  
  This application will collect information for research and reporting purposes.
  
  By clicking the **Continue** button you agree to the [Consent Form](${url_of('Paws_Rights_Information_Sheet.pdf')}).
buttons:
  - I agree & wish to continue: continue
  - I do not agree & wish to exit: exit
    url: https://humanrights.gov.au/complaints/complaint-guides/complaints-under-disability-discrimination-act?fbclid=IwAR1DLEd5tz0lo1F-iN_tEa8ULWEFETCPWpHd1uzegIxY8X-bFD2HYIknGkg
script: |
  <script>
    $(".da-field-buttons").addClass("continue-exit-buttons");
  </script>
---
mandatory: True
code: |
  # Creating object in the javascript console from the postcodes json file
  log("var postcodesDB = " + json.dumps(postcodes.as_serializable()) + ";", "javascript")
  
  # sets up sender object details for final email
  sender.name.first = "Paw Rights"
  sender.email = "docassemble-no-reply@flinders.edu.au"
  
  # To activate data collection set up email for data collection below
  #data_collection.email = ""

  # Getting current time so that the incident time can default to this
  from datetime import date
  from datetime import datetime
  now = datetime.now()
  todays_date = str(date.today())
  current_time = now.strftime("%H:%M")
  
  # Defining the general flow of the application
  if(who_is_submitter == "Myself"):
    selfsubmitted = True
    rp_namequestion = "What is your full name?"
    phonenumberquestion = "What is your phone number?"
    emailquestion = "What is your email address?"
    pronoun = "you" # Defines which pronoun to use in questions
    refused_person.name.first
    refused_person.name.last
    # if the application is self submitted, then the submitter is the refused person
    submitter.name.first = refused_person.name.first 
    submitter.name.last = refused_person.name.last
  else:
    selfsubmitted = False
    rp_namequestion = "Please enter the full name of the person who has been refused entry?"
    phonenumberquestion = "What is the phone number of the refused person?"
    emailquestion = "What is the email address of the refused person?"
    pronoun = "they" # Defines which pronoun to use in questions
    submitter.name.first
    submitter.name.last
    refused_person.name.first
    refused_person.name.last
  
  rp_phoneno
  refused_person.email
  eatery_StoreName
  eatery_Address # Same question as other address details
  inc_date
  inc_time
  inc_time_dateobj = inc_time.strftime("%H:%M")
  if(staffHasReason):
   staffReason
  else:
    staffReason = " "
  if(staffRequestedPaperwork):
    IDWasShown
  else:
    IDWasShown = False
  if(supporting_evidence):
    attached_evidence
  else:
    attached_evidence = [] 
  
  reviewed # this prompts the review page to open
  
  # This string is created to minimize the markup in the jinja doc, hence improving formatting
  rp_name = refused_person.name.first + " " + refused_person.name.last
  
  # email is sent once details have been reviewed
  report_email_sent = send_email(to=refused_person, sender=sender, template=email_template, attachments=[report])
  
  # email is also sent to Amanda's email address
  stats_email_sent = send_email(to="amanda.muller@flinders.edu.au", sender=sender, template=email_template, attachments=[report])
  
  # If data collection is to be turned on, then uncomment the line below
  #data_email_sent = send_email(to=data_collection, sender=sender, template=data_email_template)
---
include:
  - FLN1_questions.yml
---