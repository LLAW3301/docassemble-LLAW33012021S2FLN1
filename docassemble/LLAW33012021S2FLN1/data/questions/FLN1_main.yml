objects from file:
  - postcodes: postcodes.json
---
objects:
  - refused_person: Individual
  - submitter: Individual
  - sender: Individual
---
mandatory: True
event: welcome_screen
question: "Paws Rights: Entry to Premises"
subquestion: |
  Welcome to our app.
  
  <p><b>'Paw Rights: Entry to Premises'</b> has been designed to create the process of reporting assistance animal refusal for entries, fast and efficient.
  <br/>
  <br/>
  </p>
  <hr/>
  <br/>
  **Disclaimer**: This application does not provide legal advice and should not be taken    as such. This should NOT be considered a legal document. If you wish to seek legal advice, please contact an independent body.
  
  **Furthermore, the user must consent to the collection of their data.**
buttons:
  - I agree and wish to continue: continue
  - No I do not agree and with to exit: exit
---

mandatory: True
code: |
  log("var postcodesDB = " + json.dumps(postcodes.as_serializable()) + ";", "javascript")
  
  track_location = submitter.location.status()
  
  sender.name.first = "Paw Rights"
  sender.email = "docassemble-no-reply@flinders.edu.au"

  from datetime import date
  from datetime import datetime
  now = datetime.now()
  todays_date = str(date.today())
  current_time = now.strftime("%H:%M:%S")
  
  if(who_is_submitter == "Myself"):
    selfsubmitted = True
    phonenumberquestion = "What is your phone number?"
    emailquestion = "What is your email address?"
    pronoun = "you"
    refused_person.name.first = submitter.name.first
    refused_person.name.last = submitter.name.last
  else:
    selfsubmitted = False
    phonenumberquestion = "What is the phone number of the refused person?"
    emailquestion = "What is the email address of the refused person?"
    pronoun = "they"
    submitter.name.first
    submitter.name.last
    refused_person.name.first
    refused_person.name.last
  
  rp_phoneno
  refused_person.email
  eatery_StoreName
  eatery_Address # Same question as other address details
  inc_date
  inc_time
  if(staffHasReason):
   staffReason
  else:
    staffReason = "N/A"
  if(staffRequestedPaperwork):
    IDWasShown
  else:
    IDWasShown = "N/A"
  if(supporting_evidence):
    attached_evidence
  else:
    attached_evidence = []
    
  reviewed
  send_email(to=refused_person, sender=sender, template=email_template, attachments=[report])
---
include:
  - FLN1_questions.yml
---